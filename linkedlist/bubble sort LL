#Given a singly linked list of integers, sort it using 'Bubble Sort.'
Note :
No need to print the list, it has already been taken care. Only return the new head to the list.

public class Solution {

    public static Node<Integer> bubbleSort(Node<Integer> head) {
        // Base case: If the list is empty or has only one node, it's already sorted
        if (head == null || head.next == null) {
            return head;
        }

        boolean swapped;

        do {
            swapped = false;
            Node<Integer> current = head;
            Node<Integer> prev = null;

            while (current != null && current.next != null) {
                if (current.data > current.next.data) {
                    // Swap the data of the two nodes
                    int temp = current.data;
                    current.data = current.next.data;
                    current.next.data = temp;

                    swapped = true;
                }
                prev = current;
                current = current.next;
            }
        } while (swapped); // Repeat until no swaps are needed

        return head;
    }
}
