#Problem statement
Given a tree and an integer x, find and return number of Nodes which are greater than x.
35 10 3 20 30 40 2 40 50 0 0 0 0 
Sample Output 1 :
3
Explanation
Since x=35, the elements which are greater than 35 are 40, 40, 50, so the output for this is 3.

----------------------------------------------------------------------------------------------------------------------



public class Solution {

/*	TreeNode class 
 * 
 * class TreeNode<T> {
		T data;
		ArrayList<TreeNode<T>> children;

		TreeNode(T data){
			this.data = data;
			children = new ArrayList<TreeNode<T>>();
		}
	}*/

	
	

    public static int numNodeGreater(TreeNode<Integer> root, int x) {
        // Base case: if the tree is empty
        if (root == null) {
            return 0;
        }

        // Initialize count for the current node
        int count = 0;
        if (root.data > x) {
            count = 1;
        }

        // Recursively check for nodes greater than x in the children
        for (TreeNode<Integer> child : root.children) {
            count += numNodeGreater(child, x);
        }

        return count;
    }
}

